# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  print_pipeline_id:
    # parameters:
    #   id:
    #     type: string
    steps:
      # - run: echo << parameters.id >>
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      # - print_pipeline_id:
      #     id: << pipeline.id >>
      - print_pipeline_id
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  saves-output:
    docker:
      - image: cimg/node:12.16
    steps:
      - run:
          name: "Saves output"
          command: echo "hello ayomide" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
      
  print-output:
    docker:
      - image: cimg/node:12.16
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Print hello"
          command: "cat ~/output.txt"
    
  print-name:
    docker:
      - image: cimg/node:12.16
    steps:
      - run:
          name: "say world"
          command: "echo Hello $MY_NAME"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - saves-output
      - print-output:
          requires:
            - saves-output